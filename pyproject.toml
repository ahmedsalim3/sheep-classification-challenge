[project]
name = "sheep-classification-challenge"
description = "A computer vision project to classify Arabian sheep breeds from images using machine learning. Built for a cultural challenge celebrating Eid al-Adha"
readme = "README.md"
dynamic = ["version"]
requires-python = ">=3.10"

dependencies = [
    "matplotlib>=3.10.3",
    "pandas>=2.3.0",
    "scikit-learn>=1.7.0",
    "seaborn>=0.13.2",
    "timm>=1.0.15",
    "torch>=2.7.1",
    "torchvision>=0.22.1",
]

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
dev = [
    "ipython",
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-coverage",
    "ruff",
    "kaggle", # to download dataset from kaggle
    "ipykernel" # to run notebooks
]

[tool.ruff]
exclude = [".venv/"]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    # Annotations: Enforce type annotations
    "ANN",
    # Complexity: Enforce a maximum cyclomatic complexity
    "C90",
    # Pydocstyle: Enforce docstrings
    "D",
    # Pyflakes.
    "F",
    # Isort: Enforce import order
    "I",
    # Numpy: Enforce numpy style
    "NPY",
    # Print: Forbid print statements
    "T20",
]
ignore = [
    # Allow self and cls to be untyped, and allow Any type
    "ANN101", "ANN102", "ANN401",
    # Pydocstyle ignores
    "D100", "D101", "D104", "D203", "D212", "D401",
    # Allow use of f-strings in logging
    "G004"
]

[tool.pydoclint]
style = "sphinx"
exclude = "test_"
allow-init-docstring = true
arg-type-hints-in-docstring = false
check-return-types = false
require-return-section-when-returning-nothing = false

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
ignore_missing_imports = true

[tool.setuptools]
packages = ["src"]

[tool.setuptools_scm]
# can be empty if no extra settings are needed, presence enables setuptools_scm

[tool.setuptools.dynamic]
version = {attr = "src.version.__version__"}
